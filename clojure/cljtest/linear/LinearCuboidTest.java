package cljtest.linear;

import cljtest.ClojureScript;
import clojure.lang.IPersistentVector;
import jstest.Engine;

import java.util.function.BiConsumer;
import java.util.stream.Stream;

/**
 * @author Georgiy Korneev (kgeorgiy@kgeorgiy.info)
 */
public class LinearCuboidTest extends LinearBinaryTest {
    public static final BiConsumer<Engine.Result<IPersistentVector>, Number[][][]> CHECK_TENSOR_3 = checker(CHECK_MATRIX);

    public static final ClojureScript.F<IPersistentVector> C_ADD = vectorFunction("c+");
    public static final ClojureScript.F<IPersistentVector> C_SUB = vectorFunction("c-");
    public static final ClojureScript.F<IPersistentVector> C_MUL = vectorFunction("c*");
    public static final ClojureScript.F<IPersistentVector> C_DIV = vectorFunction("cd");

    public static void main(final String... args) {
        new LinearCuboidTest().run();
    }

    private void testOps3(
            final Number[][][] add,
            final Number[][][] sub,
            final Number[][][] mul,
            final Number[][][] div,
            final Number[][][]... args
    ) {
        @SuppressWarnings("Convert2MethodRef")
        final Engine.Result<?>[] tensors = Stream.of(args).map(LinearTensorTest::tensor3).toArray(v -> new Engine.Result<?>[v]);
        test(C_ADD, tensors, add);
        test(C_SUB, tensors, sub);
        test(C_MUL, tensors, mul);
        test(C_DIV, tensors, div);
    }

    private void test(final ClojureScript.F<IPersistentVector> op, final Engine.Result<?>[] tensors, final Number[][][] result) {
        assertResult(CHECK_TENSOR_3, op.call(tensors), result);
    }

    @Override
    protected void test() {
        super.test();

        test3();
    }

    private void test3() {
        // Shape: [1, 1, 1]x2
        testOps3(
                new Number[][][]{{{-7.600, 1.900}}},
                new Number[][][]{{{7.600, -1.900}}},
                new Number[][][]{{{-7.600, 1.900}}},
                new Number[][][]{{{-0.132, 0.526}}},
                new Number[][][]{{{-7.600, 1.900}}}
        );

        // Shape: [2, 1, 1]x2
        testOps3(
                new Number[][][]{{{13.200, 1.700}}},
                new Number[][][]{{{5.000, -4.700}}},
                new Number[][][]{{{37.310, -4.800}}},
                new Number[][][]{{{2.220, -0.469}}},
                new Number[][][]{{{9.100, -1.500}}},
                new Number[][][]{{{4.100, 3.200}}}
        );

        // Shape: [3, 1, 1]x2
        testOps3(
                new Number[][][]{{{22.100, -7.300}}},
                new Number[][][]{{{-2.700, -6.700}}},
                new Number[][][]{{{330.091, 598.780}}},
                new Number[][][]{{{0.285, 0.082}}},
                new Number[][][]{{{9.700, -7.000}}},
                new Number[][][]{{{8.300, -9.400}}},
                new Number[][][]{{{4.100, 9.100}}}
        );

        // Shape: [1, 2, 1]x2
        testOps3(
                new Number[][][]{{{-3.300, 2.200}}, {{1.500, -0.400}}},
                new Number[][][]{{{3.300, -2.200}}, {{-1.500, 0.400}}},
                new Number[][][]{{{-3.300, 2.200}}, {{1.500, -0.400}}},
                new Number[][][]{{{-0.303, 0.455}}, {{0.667, -2.500}}},
                new Number[][][]{{{-3.300, 2.200}}, {{1.500, -0.400}}}
        );

        // Shape: [2, 2, 1]x2
        testOps3(
                new Number[][][]{{{16.200, 4.800}}, {{-14.200, -3.300}}},
                new Number[][][]{{{2.600, -12.200}}, {{3.200, 3.100}}},
                new Number[][][]{{{63.920, -31.450}}, {{47.850, 0.320}}},
                new Number[][][]{{{1.382, -0.435}}, {{0.632, 0.031}}},
                new Number[][][]{{{9.400, -3.700}}, {{-5.500, -0.100}}},
                new Number[][][]{{{6.800, 8.500}}, {{-8.700, -3.200}}}
        );

        // Shape: [3, 2, 1]x2
        testOps3(
                new Number[][][]{{{0.300, 9.500}}, {{-14.000, 2.700}}},
                new Number[][][]{{{-3.300, 5.500}}, {{14.600, -20.300}}},
                new Number[][][]{{{29.160, -106.575}}, {{15.300, -274.912}}},
                new Number[][][]{{{0.077, -0.528}}, {{0.006, -0.282}}},
                new Number[][][]{{{-1.500, 7.500}}, {{0.300, -8.800}}},
                new Number[][][]{{{5.400, -2.900}}, {{-6.800, 4.400}}},
                new Number[][][]{{{-3.600, 4.900}}, {{-7.500, 7.100}}}
        );

        // Shape: [1, 3, 1]x2
        testOps3(
                new Number[][][]{{{-8.600, 9.700}}, {{9.000, -4.900}}, {{7.900, -9.300}}},
                new Number[][][]{{{8.600, -9.700}}, {{-9.000, 4.900}}, {{-7.900, 9.300}}},
                new Number[][][]{{{-8.600, 9.700}}, {{9.000, -4.900}}, {{7.900, -9.300}}},
                new Number[][][]{{{-0.116, 0.103}}, {{0.111, -0.204}}, {{0.127, -0.108}}},
                new Number[][][]{{{-8.600, 9.700}}, {{9.000, -4.900}}, {{7.900, -9.300}}}
        );

        // Shape: [2, 3, 1]x2
        testOps3(
                new Number[][][]{{{14.200, 12.600}}, {{11.200, 8.100}}, {{-9.200, -2.000}}},
                new Number[][][]{{{-1.600, -0.200}}, {{-8.800, 6.900}}, {{5.000, 6.000}}},
                new Number[][][]{{{49.770, 39.680}}, {{12.000, 4.500}}, {{14.910, -8.000}}},
                new Number[][][]{{{0.797, 0.969}}, {{0.120, 12.500}}, {{0.296, -0.500}}},
                new Number[][][]{{{6.300, 6.200}}, {{1.200, 7.500}}, {{-2.100, 2.000}}},
                new Number[][][]{{{7.900, 6.400}}, {{10.000, 0.600}}, {{-7.100, -4.000}}}
        );

        // Shape: [3, 3, 1]x2
        testOps3(
                new Number[][][]{{{-18.500, -1.200}}, {{6.600, -20.600}}, {{-7.300, -11.600}}},
                new Number[][][]{{{10.100, 12.200}}, {{8.400, 0.600}}, {{20.900, -1.400}}},
                new Number[][][]{{{-213.444, 60.060}}, {{-460.650, -252.000}}, {{325.584, 157.950}}},
                new Number[][][]{{{-0.083, 0.504}}, {{-0.122, -0.397}}, {{0.142, 0.267}}},
                new Number[][][]{{{-4.200, 5.500}}, {{7.500, -10.000}}, {{6.800, -6.500}}},
                new Number[][][]{{{-6.600, -3.900}}, {{7.400, -7.000}}, {{-5.700, -8.100}}},
                new Number[][][]{{{-7.700, -2.800}}, {{-8.300, -3.600}}, {{-8.400, 3.000}}}
        );

        // Shape: [1, 1, 2]x2
        testOps3(
                new Number[][][]{{{8.200, 1.900}, {-2.800, 6.700}}},
                new Number[][][]{{{-8.200, -1.900}, {2.800, -6.700}}},
                new Number[][][]{{{8.200, 1.900}, {-2.800, 6.700}}},
                new Number[][][]{{{0.122, 0.526}, {-0.357, 0.149}}},
                new Number[][][]{{{8.200, 1.900}, {-2.800, 6.700}}}
        );

        // Shape: [2, 1, 2]x2
        testOps3(
                new Number[][][]{{{4.800, 14.800}, {-11.100, -7.000}}},
                new Number[][][]{{{9.200, 4.600}, {-4.900, -12.600}}},
                new Number[][][]{{{-15.400, 49.470}, {24.800, -27.440}}},
                new Number[][][]{{{-3.182, 1.902}, {2.581, -3.500}}},
                new Number[][][]{{{7.000, 9.700}, {-8.000, -9.800}}},
                new Number[][][]{{{-2.200, 5.100}, {-3.100, 2.800}}}
        );

        // Shape: [3, 1, 2]x2
        testOps3(
                new Number[][][]{{{15.700, -13.100}, {-5.200, -14.800}}},
                new Number[][][]{{{-11.900, 0.900}, {2.800, -3.400}}},
                new Number[][][]{{{89.984, -74.481}, {31.500, -72.072}}},
                new Number[][][]{{{0.040, -0.500}, {0.046, -1.149}}},
                new Number[][][]{{{1.900, -6.100}, {-1.200, -9.100}}},
                new Number[][][]{{{6.400, -3.300}, {-7.500, -3.300}}},
                new Number[][][]{{{7.400, -3.700}, {3.500, -2.400}}}
        );

        // Shape: [1, 2, 2]x2
        testOps3(
                new Number[][][]{{{4.900, 2.800}, {6.000, -6.300}}, {{-6.000, -2.500}, {-0.900, 3.500}}},
                new Number[][][]{{{-4.900, -2.800}, {-6.000, 6.300}}, {{6.000, 2.500}, {0.900, -3.500}}},
                new Number[][][]{{{4.900, 2.800}, {6.000, -6.300}}, {{-6.000, -2.500}, {-0.900, 3.500}}},
                new Number[][][]{{{0.204, 0.357}, {0.167, -0.159}}, {{-0.167, -0.400}, {-1.111, 0.286}}},
                new Number[][][]{{{4.900, 2.800}, {6.000, -6.300}}, {{-6.000, -2.500}, {-0.900, 3.500}}}
        );

        // Shape: [2, 2, 2]x2
        testOps3(
                new Number[][][]{{{-10.500, 2.300}, {9.000, 3.900}}, {{-2.300, -11.800}, {8.100, -14.800}}},
                new Number[][][]{{{-7.100, 6.100}, {-0.400, -2.100}}, {{-9.700, 5.600}, {7.700, 4.000}}},
                new Number[][][]{{{14.960, -7.980}, {20.210, 2.700}}, {{-22.200, 26.970}, {1.580, 50.760}}},
                new Number[][][]{{{5.176, -2.211}, {0.915, 0.300}}, {{-1.622, 0.356}, {39.500, 0.574}}},
                new Number[][][]{{{-8.800, 4.200}, {4.300, 0.900}}, {{-6.000, -3.100}, {7.900, -5.400}}},
                new Number[][][]{{{-1.700, -1.900}, {4.700, 3.000}}, {{3.700, -8.700}, {0.200, -9.400}}}
        );

        // Shape: [3, 2, 2]x2
        testOps3(
                new Number[][][]{{{-0.100, -1.500}, {2.700, 9.000}}, {{1.000, 7.600}, {11.800, 5.900}}},
                new Number[][][]{{{-3.500, -11.300}, {-10.300, -11.400}}, {{6.400, -1.200}, {-6.600, -13.700}}},
                new Number[][][]{{{42.804, -38.400}, {-40.052, -23.100}}, {{2.664, -123.904}, {42.432, -28.080}}},
                new Number[][][]{{{0.076, -1.067}, {-0.361, -0.062}}, {{5.139, -0.083}, {0.159, -0.542}}},
                new Number[][][]{{{-1.800, -6.400}, {-3.800, -1.200}}, {{3.700, 3.200}, {2.600, -3.900}}},
                new Number[][][]{{{5.800, 2.400}, {3.400, 2.500}}, {{-0.300, 8.800}, {2.400, 0.800}}},
                new Number[][][]{{{-4.100, 2.500}, {3.100, 7.700}}, {{-2.400, -4.400}, {6.800, 9.000}}}
        );

        // Shape: [1, 3, 2]x2
        testOps3(
                new Number[][][]{{{9.700, 2.000}, {5.900, 8.800}}, {{1.800, -6.300}, {-7.300, 7.900}}, {{8.000, -1.300}, {0.600, -0.100}}},
                new Number[][][]{{{-9.700, -2.000}, {-5.900, -8.800}}, {{-1.800, 6.300}, {7.300, -7.900}}, {{-8.000, 1.300}, {-0.600, 0.100}}},
                new Number[][][]{{{9.700, 2.000}, {5.900, 8.800}}, {{1.800, -6.300}, {-7.300, 7.900}}, {{8.000, -1.300}, {0.600, -0.100}}},
                new Number[][][]{{{0.103, 0.500}, {0.169, 0.114}}, {{0.556, -0.159}, {-0.137, 0.127}}, {{0.125, -0.769}, {1.667, -10.000}}},
                new Number[][][]{{{9.700, 2.000}, {5.900, 8.800}}, {{1.800, -6.300}, {-7.300, 7.900}}, {{8.000, -1.300}, {0.600, -0.100}}}
        );

        // Shape: [2, 3, 2]x2
        testOps3(
                new Number[][][]{{{2.200, 6.900}, {1.700, 11.400}}, {{4.200, -6.400}, {0.200, 5.600}}, {{10.300, 0.200}, {-7.600, 6.500}}},
                new Number[][][]{{{15.200, -3.900}, {2.700, 4.200}}, {{4.800, -8.200}, {-17.800, -1.200}}, {{-4.700, 18.200}, {-3.600, -3.300}}},
                new Number[][][]{{{-56.550, 8.100}, {-1.100, 28.080}}, {{-1.350, -6.570}, {-79.200, 7.480}}, {{21.000, -82.800}, {11.200, 7.840}}},
                new Number[][][]{{{-1.338, 0.278}, {-4.400, 2.167}}, {{-15.000, -8.111}, {-0.978, 0.647}}, {{0.373, -1.022}, {2.800, 0.327}}},
                new Number[][][]{{{8.700, 1.500}, {2.200, 7.800}}, {{4.500, -7.300}, {-8.800, 2.200}}, {{2.800, 9.200}, {-5.600, 1.600}}},
                new Number[][][]{{{-6.500, 5.400}, {-0.500, 3.600}}, {{-0.300, 0.900}, {9.000, 3.400}}, {{7.500, -9.000}, {-2.000, 4.900}}}
        );

        // Shape: [3, 3, 2]x2
        testOps3(
                new Number[][][]{{{5.100, 9.100}, {2.000, 8.100}}, {{2.800, -2.700}, {-1.000, 11.100}}, {{-10.200, -4.500}, {-10.800, 21.600}}},
                new Number[][][]{{{-6.700, -23.700}, {7.800, 2.900}}, {{-17.200, -0.100}, {8.800, 3.100}}, {{1.400, 9.900}, {-7.800, -10.000}}},
                new Number[][][]{{{-6.720, -484.939}, {-219.618, -61.985}}, {{-101.592, 72.996}, {-15.288, -128.439}}, {{64.372, 1.917}, {20.088, 361.746}}},
                new Number[][][]{{{-0.095, -0.110}, {-0.109, -0.488}}, {{-0.510, 0.027}, {-0.995, -0.392}}, {{0.301, 3.803}, {4.306, 0.093}}},
                new Number[][][]{{{-0.800, -7.300}, {4.900, 5.500}}, {{-7.200, -1.400}, {3.900, 7.100}}, {{-4.400, 2.700}, {-9.300, 5.800}}},
                new Number[][][]{{{2.400, 7.300}, {-8.300, -2.300}}, {{1.700, 6.600}, {-5.600, 6.700}}, {{-7.700, -7.100}, {-2.400, 7.700}}},
                new Number[][][]{{{3.500, 9.100}, {5.400, 4.900}}, {{8.300, -7.900}, {0.700, -2.700}}, {{1.900, -0.100}, {0.900, 8.100}}}
        );

        // Shape: [1, 1, 3]x2
        testOps3(
                new Number[][][]{{{-2.200, 2.000}, {-0.700, 2.000}, {-3.500, 4.700}}},
                new Number[][][]{{{2.200, -2.000}, {0.700, -2.000}, {3.500, -4.700}}},
                new Number[][][]{{{-2.200, 2.000}, {-0.700, 2.000}, {-3.500, 4.700}}},
                new Number[][][]{{{-0.455, 0.500}, {-1.429, 0.500}, {-0.286, 0.213}}},
                new Number[][][]{{{-2.200, 2.000}, {-0.700, 2.000}, {-3.500, 4.700}}}
        );

        // Shape: [2, 1, 3]x2
        testOps3(
                new Number[][][]{{{9.100, -1.600}, {11.200, -9.500}, {-10.800, -8.500}}},
                new Number[][][]{{{7.900, 2.400}, {-7.200, -1.500}, {-0.200, -5.300}}},
                new Number[][][]{{{5.100, -0.800}, {18.400, 22.000}, {29.150, 11.040}}},
                new Number[][][]{{{14.167, -0.200}, {0.217, 1.375}, {1.038, 4.313}}},
                new Number[][][]{{{8.500, 0.400}, {2.000, -5.500}, {-5.500, -6.900}}},
                new Number[][][]{{{0.600, -2.000}, {9.200, -4.000}, {-5.300, -1.600}}}
        );

        // Shape: [3, 1, 3]x2
        testOps3(
                new Number[][][]{{{-2.800, 12.200}, {4.400, 3.800}, {-9.800, -4.000}}},
                new Number[][][]{{{-7.200, -5.000}, {-9.800, 13.800}, {6.600, 15.800}}},
                new Number[][][]{{{232.000, -3.132}, {68.094, 40.128}, {-21.120, 122.130}}},
                new Number[][][]{{{0.108, -4.138}, {0.107, 1.930}, {-0.121, 0.285}}},
                new Number[][][]{{{-5.000, 3.600}, {-2.700, 8.800}, {-1.600, 5.900}}},
                new Number[][][]{{{8.000, -0.100}, {-2.600, -1.200}, {-6.000, -6.900}}},
                new Number[][][]{{{-5.800, 8.700}, {9.700, -3.800}, {-2.200, -3.000}}}
        );

        // Shape: [1, 2, 3]x2
        testOps3(
                new Number[][][]{{{-5.300, 3.000}, {-7.100, 0.200}, {-8.000, 8.500}}, {{-6.600, 7.000}, {-1.500, -0.200}, {4.100, 0.200}}},
                new Number[][][]{{{5.300, -3.000}, {7.100, -0.200}, {8.000, -8.500}}, {{6.600, -7.000}, {1.500, 0.200}, {-4.100, -0.200}}},
                new Number[][][]{{{-5.300, 3.000}, {-7.100, 0.200}, {-8.000, 8.500}}, {{-6.600, 7.000}, {-1.500, -0.200}, {4.100, 0.200}}},
                new Number[][][]{{{-0.189, 0.333}, {-0.141, 5.000}, {-0.125, 0.118}}, {{-0.152, 0.143}, {-0.667, -5.000}, {0.244, 5.000}}},
                new Number[][][]{{{-5.300, 3.000}, {-7.100, 0.200}, {-8.000, 8.500}}, {{-6.600, 7.000}, {-1.500, -0.200}, {4.100, 0.200}}}
        );

        // Shape: [2, 2, 3]x2
        testOps3(
                new Number[][][]{{{5.400, 6.100}, {-12.200, 10.900}, {-9.900, 0.700}}, {{-7.600, -1.800}, {-7.900, -5.000}, {0.800, 15.600}}},
                new Number[][][]{{{4.200, 1.300}, {2.000, -4.700}, {-6.300, 18.900}}, {{4.200, 14.200}, {-1.900, -13.400}, {5.400, -2.000}}},
                new Number[][][]{{{2.880, 8.880}, {36.210, 24.180}, {14.580, -89.180}}, {{10.030, -49.600}, {14.700, -38.640}, {-7.130, 59.840}}},
                new Number[][][]{{{8.000, 1.542}, {0.718, 0.397}, {4.500, -1.077}}, {{0.288, -0.775}, {1.633, -2.190}, {-1.348, 0.773}}},
                new Number[][][]{{{4.800, 3.700}, {-5.100, 3.100}, {-8.100, 9.800}}, {{-1.700, 6.200}, {-4.900, -9.200}, {3.100, 6.800}}},
                new Number[][][]{{{0.600, 2.400}, {-7.100, 7.800}, {-1.800, -9.100}}, {{-5.900, -8.000}, {-3.000, 4.200}, {-2.300, 8.800}}}
        );

        // Shape: [3, 2, 3]x2
        testOps3(
                new Number[][][]{{{2.600, 3.200}, {-10.100, -23.300}, {-13.700, -9.000}}, {{-11.900, 12.900}, {-1.000, 9.500}, {10.100, -8.400}}},
                new Number[][][]{{{-2.000, 3.800}, {-8.700, 7.900}, {17.500, 15.600}}, {{19.500, -11.900}, {-3.800, 8.300}, {0.100, -0.800}}},
                new Number[][][]{{{-21.534, -312.480}, {768.732, -466.543}, {114.380, 117.876}}, {{219.716, 14.720}, {39.168, -672.840}, {-197.064, 80.730}}},
                new Number[][][]{{{-0.004, -0.039}, {0.115, -0.127}, {0.032, 0.092}}, {{0.066, 0.017}, {0.147, -0.118}, {-0.132, 0.262}}},
                new Number[][][]{{{0.300, 3.500}, {-9.400, -7.700}, {1.900, 3.300}}, {{3.800, 0.500}, {-2.400, 8.900}, {5.100, -4.600}}},
                new Number[][][]{{{-7.400, 9.300}, {8.700, -7.300}, {-7.000, -7.600}}, {{-9.800, 3.200}, {-3.400, 9.000}, {9.200, 2.700}}},
                new Number[][][]{{{9.700, -9.600}, {-9.400, -8.300}, {-8.600, -4.700}}, {{-5.900, 9.200}, {4.800, -8.400}, {-4.200, -6.500}}}
        );

        // Shape: [1, 3, 3]x2
        testOps3(
                new Number[][][]{{{5.200, -1.000}, {-4.200, 0.200}, {8.400, 5.100}}, {{-1.200, -5.700}, {3.800, -3.200}, {6.900, 7.500}}, {{-8.200, -8.900}, {2.000, 7.100}, {-6.100, -7.300}}},
                new Number[][][]{{{-5.200, 1.000}, {4.200, -0.200}, {-8.400, -5.100}}, {{1.200, 5.700}, {-3.800, 3.200}, {-6.900, -7.500}}, {{8.200, 8.900}, {-2.000, -7.100}, {6.100, 7.300}}},
                new Number[][][]{{{5.200, -1.000}, {-4.200, 0.200}, {8.400, 5.100}}, {{-1.200, -5.700}, {3.800, -3.200}, {6.900, 7.500}}, {{-8.200, -8.900}, {2.000, 7.100}, {-6.100, -7.300}}},
                new Number[][][]{{{0.192, -1.000}, {-0.238, 5.000}, {0.119, 0.196}}, {{-0.833, -0.175}, {0.263, -0.313}, {0.145, 0.133}}, {{-0.122, -0.112}, {0.500, 0.141}, {-0.164, -0.137}}},
                new Number[][][]{{{5.200, -1.000}, {-4.200, 0.200}, {8.400, 5.100}}, {{-1.200, -5.700}, {3.800, -3.200}, {6.900, 7.500}}, {{-8.200, -8.900}, {2.000, 7.100}, {-6.100, -7.300}}}
        );

        // Shape: [2, 3, 3]x2
        testOps3(
                new Number[][][]{{{4.500, 10.500}, {-4.600, -2.700}, {13.300, 10.200}}, {{3.300, -11.500}, {0.800, 0.600}, {1.100, 7.100}}, {{12.700, 1.200}, {-7.000, -2.700}, {0.800, 7.500}}},
                new Number[][][]{{{-4.700, -3.300}, {-0.200, 16.700}, {4.900, 7.000}}, {{-14.500, -8.300}, {-16.800, -10.800}, {14.300, 1.100}}, {{3.500, -15.200}, {-2.000, -14.300}, {8.600, 11.500}}},
                new Number[][][]{{{-0.460, 24.840}, {5.280, -67.900}, {38.220, 13.760}}, {{-49.840, 15.840}, {-70.400, -29.070}, {-50.820, 12.300}}, {{37.260, -57.400}, {11.250, -49.300}, {-18.330, -19.000}}},
                new Number[][][]{{{-0.022, 0.522}, {1.091, -0.722}, {2.167, 5.375}}, {{-0.629, 6.188}, {-0.909, -0.895}, {-1.167, 1.367}}, {{1.761, -0.854}, {1.800, -1.466}, {-1.205, -4.750}}},
                new Number[][][]{{{-0.100, 3.600}, {-2.400, 7.000}, {9.100, 8.600}}, {{-5.600, -9.900}, {-8.000, -5.100}, {7.700, 4.100}}, {{8.100, -7.000}, {-4.500, -8.500}, {4.700, 9.500}}},
                new Number[][][]{{{4.600, 6.900}, {-2.200, -9.700}, {4.200, 1.600}}, {{8.900, -1.600}, {8.800, 5.700}, {-6.600, 3.000}}, {{4.600, 8.200}, {-2.500, 5.800}, {-3.900, -2.000}}}
        );

        // Shape: [3, 3, 3]x2
        testOps3(
                new Number[][][]{{{-11.600, 14.600}, {13.800, -12.400}, {-3.000, 25.300}}, {{15.900, 10.500}, {5.700, -13.000}, {0.300, -6.900}}, {{-16.800, 5.800}, {-17.200, -5.200}, {-7.100, -6.800}}},
                new Number[][][]{{{-4.800, -6.400}, {-24.400, 17.000}, {-9.400, -9.300}}, {{-0.300, -1.300}, {-21.100, -7.000}, {-11.700, 4.900}}, {{4.200, -22.800}, {1.600, -8.600}, {0.100, 7.600}}},
                new Number[][][]{{{76.752, 86.346}, {-483.360, 122.590}, {305.536, 598.400}}, {{126.984, 38.640}, {-345.653, 162.400}, {228.000, 25.520}}, {{-54.432, -411.400}, {-164.502, 357.696}, {18.095, 4.400}}},
                new Number[][][]{{{0.876, 0.195}, {-0.058, 0.043}, {0.126, 0.107}}, {{0.479, 0.548}, {-0.172, 0.616}, {0.143, 0.039}}, {{-0.729, -0.176}, {-0.370, 0.133}, {0.677, 0.036}}},
                new Number[][][]{{{-8.200, 4.100}, {-5.300, 2.300}, {-6.200, 8.000}}, {{7.800, 4.600}, {-7.700, -10.000}, {-5.700, -1.000}}, {{-6.300, -8.500}, {-7.800, -6.900}, {-3.500, 0.400}}},
                new Number[][][]{{{-5.200, 7.800}, {9.500, -6.500}, {8.800, 8.500}}, {{4.400, 3.500}, {6.700, -5.800}, {-4.000, 2.900}}, {{-9.600, 5.500}, {-5.700, -6.400}, {-4.700, -5.000}}},
                new Number[][][]{{{1.800, 2.700}, {9.600, -8.200}, {-5.600, 8.800}}, {{3.700, 2.400}, {6.700, 2.800}, {10.000, -8.800}}, {{-0.900, 8.800}, {-3.700, 8.100}, {1.100, -2.200}}}
        );
    }
}
